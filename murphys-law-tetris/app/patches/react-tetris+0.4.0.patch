diff --git a/node_modules/react-tetris/lib/components/Tetris.js b/node_modules/react-tetris/lib/components/Tetris.js
index 1715dd8..185e75f 100644
--- a/node_modules/react-tetris/lib/components/Tetris.js
+++ b/node_modules/react-tetris/lib/components/Tetris.js
@@ -27,17 +27,24 @@ export default function Tetris(props) {
     var keyboardMap = (_a = props.keyboardControls) !== null && _a !== void 0 ? _a : defaultKeyboardMap;
     useKeyboardControls(keyboardMap, dispatch);
     var level = Game.getLevel(game);
+    var lines = game.lines;
+
     React.useEffect(function () {
         var interval;
+        const minLevel = level
+        // Don't increase the level at beginning of the game.
+        const maxLevel = lines == 0 ? level : level + 5
+        const randLevel = Math.floor(Math.random() * (maxLevel - minLevel + 1)) + minLevel;
+        console.log("randLevel", randLevel)
         if (game.state === 'PLAYING') {
             interval = window.setInterval(function () {
                 dispatch('TICK');
-            }, tickSeconds(level) * 1000);
+            }, tickSeconds(randLevel) * 1000);
         }
         return function () {
             window.clearInterval(interval);
         };
-    }, [game.state, level]);
+    }, [game.state, level, lines]);
     var controller = React.useMemo(function () { return ({
         pause: function () { return dispatch('PAUSE'); },
         resume: function () { return dispatch('RESUME'); },
diff --git a/node_modules/react-tetris/lib/modules/piece-queue.js b/node_modules/react-tetris/lib/modules/piece-queue.js
index 93a4bba..39c443d 100644
--- a/node_modules/react-tetris/lib/modules/piece-queue.js
+++ b/node_modules/react-tetris/lib/modules/piece-queue.js
@@ -44,7 +44,15 @@ function pullFromBucket(bucket) {
         // fill the bucket
         pieces.forEach(function (piece) {
             // 4 is just the number of each type of piece. it's arbitrary, not magic, okay.
-            for (var i = 0; i < 4; i++) {
+            var numPieces = 4;
+            if (piece == "I") {
+                numPieces = 2
+            } else if (piece == "S") {
+                numPieces = 8
+            } else if (piece == "Z") {
+                numPieces = 8
+            }
+            for (var i = 0; i < numPieces; i++) {
                 local.push(piece);
             }
         });
